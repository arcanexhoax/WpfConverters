<Window x:Class="WpfConverters.Example.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:WpfConverters.Example.ViewModels"
        xmlns:c="clr-namespace:WpfConverters;assembly=WpfConverters"
        xmlns:s="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.DataContext>
        <vm:MainViewModel />
    </Window.DataContext>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <Color x:Key="color">#ff9900</Color>
    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <!--Full converter initialization-->
        <Border Background="Red">
            <Border.Width>
                <Binding Path="Width">
                    <Binding.Converter>
                        <c:MathConverter Operation="Multiply">
                            <c:MathConverter.Operands>
                                <s:Double>10</s:Double>
                                <s:Double>20</s:Double>
                            </c:MathConverter.Operands>
                        </c:MathConverter>
                    </Binding.Converter>
                </Binding>
            </Border.Width>
        </Border>

        <!--Complex math converter-->
        <Border Background="green"
                Grid.Column="1"
                Width="{Binding Width, Converter={c:MathConverter Operation=Sqrt,
                                       Then={c:MathConverter Operation=Multiply, Operand=5,
                                       Then={c:MathConverter Operation=Division, Operand=3,
                                       Then={c:MathConverter Operation=Round, Operand=0}}}}}" />

        <!--Use different types of converters including third party-->
        <Button Background="Blue"
                Grid.Column="2"
                Width="10"
                x:Name="blueBtn"
                Visibility="{Binding Width, Converter={c:MathConverter Operation=Multiply, Operand=15,
                                            Then={c:NumberComparisonConverter Operation=NotEquals, Operand=1500,
                                            Then={StaticResource BoolToVis}}}}" />

        <!--Use bool converter-->
        <Button Background="Yellow"
                Grid.Column="3"
                Width="50"
                IsEnabled="{Binding Width, Converter={c:NumberComparisonConverter Operation=MoreOrEquals, Operand=90, 
                                           Then={c:BoolConverter Operation=Not}}}" />

        <!--Use third party values for converters-->
        <Border Background="Purple"
                Grid.Row="1"
                Width="{Binding Source=20, Converter={c:MathConverter Operation=Addition, Operand=500}}" />
        
        <!--String case converter-->
        <TextBlock Grid.Row="1"
                   Grid.Column="1"
                   Text="{Binding Source=true, Converter={c:BoolConverter Operation=And, Operand=False,
                                               Then={c:ToStringConverter NullHanding=ReturnNullAsString,
                                               Then={c:StringCaseConverter Operation=Invert}}}}" />
        
        <!--String comparison converter-->
        <TextBlock Grid.Row="1"
                   Grid.Column="2"
                   Text="{Binding Source='test', Converter={c:StringComparisonConverter Operation=EqualsIgnoreCase, Operand='TEST',
                                                 Then={c:StringCaseConverter Operation=ToUpper}}}" />
        
        <!--Custom bool to visibility converter if you want to use your own visibility behavior-->
        <Border Grid.Row="1"
                Grid.Column="3"
                Background="Aquamarine"
                Visibility="{Binding Source=true, Converter={c:BoolToVisibilityConverter ForTrue=Visible}}" />
        
        <!--Custom string format. Useful if formatted text need to convert or it has more than 1 arg-->
        <TextBlock Grid.Row="2"
                   Text="{Binding Numbers, Converter={c:StringFormatConverter Format='{}FIRST:{0}, SECOND: {1}, THIRD: {2}.', 
                                           Then={c:StringCaseConverter Operation=ToUpperFirstLetterAndToLowerOther}}}" />
        
        <!--Custom string format. Implementation with using Source-->
        <TextBlock Grid.Row="2"
                   Grid.Column="1"
                   TextWrapping="Wrap">
            <TextBlock.Text>
                <Binding Converter="{c:StringFormatConverter Format='The control: {0}, has {1} args'}">
                    <Binding.Source>
                        <x:Array Type="s:String">
                            <s:String>TextBlock</s:String>
                            <s:String>2</s:String>
                        </x:Array>
                    </Binding.Source>
                </Binding>
            </TextBlock.Text>
        </TextBlock>
        
        <!--Type converter-->
        <TextBlock Grid.Row="2"
                   Grid.Column="2"
                   Text="{Binding BoolValue, Converter={c:TypeConverter To={x:Type s:Int16}}}" />
        
        <!--Collection to string converter-->
        <TextBlock Grid.Row="2"
                   Grid.Column="3"
                   Text="{Binding Numbers, Converter={c:CollectionToStringConverter Separator=';', StringConverter={c:TypeConverter}}}" />
        
        <!--Collection count converter-->
        <TextBlock Grid.Row="3"
                   Text="{Binding Numbers, Converter={c:CollectionToCountConverter 
                                           Then={c:MathConverter Operation=Multiply, Operand=2}}}" />
        
        <!--Visibility to bool converter-->
        <Button Grid.Row="3"
                Grid.Column="1"
                IsEnabled="{Binding Visibility, ElementName=blueBtn, Converter={c:VisibilityToBoolConverter ForCollapsed=True}}" />
        
        <!--Color to brush converter-->
        <Border Grid.Row="3"
                Grid.Column="2"
                Background="{Binding Source={StaticResource color}, Converter={c:ColorToBrushConverter}}" />
        
        <!--Object to bool converter-->
        <TextBlock Grid.Row="3"
                   Grid.Column="3"
                   Text="{Binding Source={x:Null}, Converter={c:ObjectToBoolConverter Operation=IsNull}}" />
        
        <!--Url to image converter-->
        <Border Grid.Row="4">
            <Border.Background>
                <ImageBrush ImageSource="{Binding Source='https://imgupscaler.com/images/samples/animal-after.webp', Converter={c:UrlToImageConverter}}" />
            </Border.Background>
        </Border>
        
        <!--Collection item converter-->
        <TextBlock Grid.Row="4"
                   Grid.Column="1"
                   Text="{Binding Numbers, Converter={c:CollectionItemConverter Index=2}}" />

        <!--Bool to opacity converter-->
        <Border Grid.Row="4"
                Grid.Column="2"
                Background="Black"
                Opacity="{Binding Source=false, Converter={c:BoolToOpacityConverter ForFalse=0.4}}"/>

        <!--Lots of bool to converters-->
        <Border Grid.Row="4"
                Grid.Column="3"
                BorderThickness="{Binding Source=true, Converter={c:BoolToThicknessConverter ForTrue=3}}"
                Padding="{Binding Source=true, Converter={c:BoolToThicknessConverter ForTrue=10}}"
                Margin="{Binding Source=true, Converter={c:BoolToThicknessConverter ForTrue=10}}"
                Background="{Binding Source=true, Converter={c:BoolToBrushConverter ForTrue=BlueViolet}}"
                BorderBrush="Brown"/>
    </Grid>
</Window>
